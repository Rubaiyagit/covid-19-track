[{"/home/rubaiya/github-projects/covid-19-update/src/index.js":"1","/home/rubaiya/github-projects/covid-19-update/src/App.js":"2","/home/rubaiya/github-projects/covid-19-update/src/reportWebVitals.js":"3"},{"size":500,"mtime":1611207955350,"results":"4","hashOfConfig":"5"},{"size":3937,"mtime":1611208371616,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1611207955350,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1yuvyof",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/rubaiya/github-projects/covid-19-update/src/index.js",[],["16","17"],"/home/rubaiya/github-projects/covid-19-update/src/App.js",["18","19","20"],"\nimport React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from \"react-bootstrap/CardDeck\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\nimport Columns from \"react-columns\";\nimport Form from \"react-bootstrap/Form\"\nfunction App() {\n  const[latest,setLatest]= useState(\"\");\n  const[results,setResults]=useState([]);\n  const [searchCountry,setSearchCountry]=useState(\"\");\n\n  useEffect(() => {\n    axios\n    .all([\n     axios.get (\"https://corona.lmao.ninja/v3/covid-19/all\"),\n    axios.get(\"https://corona.lmao.ninja/v3/covid-19/countries\")\n  ])\n    .then(responseArr=>{\n      setLatest(responseArr[0].data);\n      setResults(responseArr[1].data);\n    })\n    .catch(err=>{\n      console.log(err);\n    });\n  },[]);\n  const date= new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  const filterCountry= results.filter(item=>{\n    return searchCountry !==\"\"? item.country === searchCountry : item;\n  });\n  const countries = filterCountry.map((data,i)=>{\n    return(\n      <div class=\"container-fluid\" class=\"card-horizontal\" class=\"img-square-wrapper\">\n      \n        <div className=\"container-fluid\">\n          <div className=\"row\">\n              <div className=\"col-12 mt-1\">\n                  <div className=\"card\">\n                  <div class=\"card-header\">\n                    {data.country}\n                  </div>\n                      <div className=\"card-horizontal\">\n                          <div className=\"img--wrapper\">\n                              <img className=\"flags\" src={data.countryInfo.flag} alt=\"Card image cap\"></img>\n                          </div>\n                      <div className=\"card-body\">\n                      \n                        <p class=\"card-text\">\n                          <ul>\n                            <li>Cases - {data.cases}</li>\n                            <li>Deaths - {data.deaths}</li>\n                            <li>recovered - {data.recovered}</li>\n                            <li>Today's cases - {data.todayCases}</li>\n                            <li>Today's death - {data.todayDeath}</li>\n                            <li>Active - {data.active}</li>\n                            <li>Critical - {data.critical}</li>\n                          </ul>\n                        </p>\n                          </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n     \n      </div>\n    );\n  });\n  var queries = [{\n    columns: 1,\n    query: 'min-width: 500px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1000px'\n  }];\n  return (\n    <div className=\"App\">\n     <CardDeck>\n  <Card bg=\"secondary\" text={\"white\"} classname=\"text-center\" style={{margin:\"10px\"}}>\n    <Card.Body>\n      <Card.Title>Cases</Card.Title>\n      <Card.Text>{latest.cases}</Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small >Last updated {lastUpdated}</small>\n    </Card.Footer>\n  </Card>\n  <Card bg=\"danger\" text={\"white\"} classname=\"text-center\" style={{margin:\"10px\"}}>\n    <Card.Body>\n      <Card.Title>Death</Card.Title>\n      <Card.Text>{latest.deaths}</Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small>Last updated {lastUpdated}</small>\n    </Card.Footer>\n  </Card>\n  <Card bg=\"success\" text={\"white\"} classname=\"text-center\" style={{margin:\"10px\"}}>\n    <Card.Body>\n      <Card.Title>Recovered</Card.Title>\n      <Card.Text>{latest.recovered}</Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small>Last updated {lastUpdated}</small>\n    </Card.Footer>\n  </Card>\n</CardDeck>\n<Form>\n  <Form.Group controlId=\"formGroupSearch\">\n    <Form.Label>Search</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Search a country\"\n      onChange={e=>setSearchCountry(e.target.value)}\n    />\n  </Form.Group>\n</Form>\n<Columns queries={queries}>{countries}</Columns>\n    </div>\n  );\n}\n\nexport default App;\n","/home/rubaiya/github-projects/covid-19-update/src/reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":36,"column":36,"nodeType":"27","endLine":36,"endColumn":59},{"ruleId":"25","severity":1,"message":"26","line":36,"column":60,"nodeType":"27","endLine":36,"endColumn":86},{"ruleId":"28","severity":1,"message":"29","line":47,"column":31,"nodeType":"30","endLine":47,"endColumn":103},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]